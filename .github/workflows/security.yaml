name: Security Scan

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

permissions:
  contents: read
  security-events: write

jobs:
  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck
        run: govulncheck ./...

  gosec:
    name: Security Scan with gosec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # Output in text format to avoid SARIF compatibility issues
          # Use -exclude-generated to skip generated files
          args: '-fmt=json -out=results.json -exclude-generated ./...'

      - name: Display gosec results
        if: always()
        run: |
          if [ -f results.json ]; then
            echo "Security scan results:"
            cat results.json | jq -r '.Issues[] | "\(.severity): \(.file):\(.line) - \(.details)"' || cat results.json
          fi

  trivy:
    name: Trivy Vulnerability Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
